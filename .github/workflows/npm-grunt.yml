name: Node.js CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build project
      run: npm run build
      env:
        NEXT_PUBLIC_WEATHER_API_KEY: ${{ secrets.NEXT_PUBLIC_WEATHER_API_KEY }}
        NEXT_PUBLIC_WEATHER_BASE_URL: ${{ secrets.NEXT_PUBLIC_WEATHER_BASE_URL }}
        NEXT_PUBLIC_GEOAPIFY_API_KEY: ${{ secrets.NEXT_PUBLIC_GEOAPIFY_API_KEY }}
        NEXT_PUBLIC_GEOAPIFY_BASE_URL: ${{ secrets.NEXT_PUBLIC_GEOAPIFY_BASE_URL }}

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Start application
      run: npm run build && npm start &
      env:
        NEXT_PUBLIC_WEATHER_API_KEY: ${{ secrets.NEXT_PUBLIC_WEATHER_API_KEY }}
        NEXT_PUBLIC_WEATHER_BASE_URL: ${{ secrets.NEXT_PUBLIC_WEATHER_BASE_URL }}
        NEXT_PUBLIC_GEOAPIFY_API_KEY: ${{ secrets.NEXT_PUBLIC_GEOAPIFY_API_KEY }}
        NEXT_PUBLIC_GEOAPIFY_BASE_URL: ${{ secrets.NEXT_PUBLIC_GEOAPIFY_BASE_URL }}
    
    - name: Wait for app to start
      run: sleep 10
    
    - name: Health check
      run: curl --fail http://localhost:3000 || exit 1
